redis:
  enable: true

nameOverride: ""
fullnameOverride: ""

deploy:
  podAnnotations: {}
  podLabels: {}

  initContainers:
    - name: init-container
      image: busybox
      command: ['sh', '-c', 'wget -O /init/index.html https://www.w3.org/Style/CSS/Test/CSS3/Selectors/current/html/tests/css3-modsel-1.html']
      volumeMounts:
        - mountPath: /init
          name: pv-data

  replicaCount: 1

  imagePullSecrets: []
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: "1.14.2"

  volumes: 
    - name: pv-data
      persistentVolumeClaim:
        claimName: pvc-nginx
    - name: config-volume
      configMap:
        name: custom-config
    - name: nginx-default-config-volume
      configMap:
        name: nginx-default-config-homework

  terminationGracePeriodSeconds: 4

  volumeMounts: 
    - name: pv-data
      mountPath: /homework
    - name: nginx-default-config-volume
      mountPath: /etc/nginx/conf.d/
    - name: config-volume
      mountPath: /homework/conf

  env:
    - name: NGINX_PORT
      value: "8000"

  lifecycle:
    preStop:
      exec:
        command: ["/bin/sh", "-c", "rm -f /homework"]

  resources:
    requests:
      memory: "64Mi"
      cpu: "250m"
    limits:
      memory: "128Mi"
      cpu: "500m"

  readinessProbe:
    httpGet:
      path: /index.html
      port: 8000
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
    timeoutSeconds: 1

serviceAccountMonitoring:
  create: true

serviceAccountCd:
  create: true

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

pvc:
  create: true
  storageClassName: yc-network-hdd-retain
  storage: 3Gi
